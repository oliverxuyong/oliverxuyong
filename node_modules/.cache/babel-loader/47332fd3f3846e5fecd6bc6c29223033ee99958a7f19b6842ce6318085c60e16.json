{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/SpokenText.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpokenText = ({\n  spokenText,\n  matchedPos\n}) => {\n  const wordArray = spokenText.replace(/^\\s/, \"\").split(' '); //remove leading space\n  //console.log('enter spokenText. wordArray=',wordArray);\n  const wordlist = wordArray.map((word, i) => {\n    //let returnvalue: JSX.Element;\n    if (matchedPos[i]) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"word\",\n        style: {\n          color: 'green'\n        },\n        children: word + ' '\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"word\",\n        style: {\n          color: 'red'\n        },\n        children: word + ' '\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      minHeight: '80px',\n      marginTop: '-8px',\n      marginLeft: '4px',\n      marginRight: '4px',\n      padding: '5px',\n      paddingTop: '12px',\n      borderRadius: '5px',\n      transition: '0.3s',\n      border: '1px solid'\n    },\n    children: wordlist\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = SpokenText;\nexport default SpokenText;\nvar _c;\n$RefreshReg$(_c, \"SpokenText\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SpokenText","spokenText","matchedPos","wordArray","replace","split","wordlist","map","word","i","className","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","minHeight","marginTop","marginLeft","marginRight","padding","paddingTop","borderRadius","transition","border","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/SpokenText.jsx"],"sourcesContent":["import React from 'react';\n\nconst SpokenText = ({ spokenText, matchedPos }) => {\n  const wordArray = spokenText.replace(/^\\s/, \"\").split(' '); //remove leading space\n  //console.log('enter spokenText. wordArray=',wordArray);\n  const wordlist = wordArray.map((word, i) => {\n    //let returnvalue: JSX.Element;\n        if (matchedPos[i]) {\n      return (\n        <p className=\"word\" style={{ color: 'green' }} key={i}>\n          {word + ' '}\n        </p>\n      );\n    } else {\n      return (\n        <p className=\"word\" style={{ color: 'red' }} key={i}>\n          {word + ' '}\n        </p>\n      );\n    }\n  });\n  return (\n    <div style={{\n      backgroundColor:'white', \n      minHeight:'80px',\n      marginTop:'-8px',\n      marginLeft:'4px',\n      marginRight:'4px',\n      padding:'5px',\n      paddingTop:'12px', \n      borderRadius:'5px', \n      transition:'0.3s', \n      border:'1px solid'}}>\n      {wordlist}\n      \n    </div>\n  );\n}\n\nexport default SpokenText;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EACjD,MAAMC,SAAS,GAAGF,UAAU,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5D;EACA,MAAMC,QAAQ,GAAGH,SAAS,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IAC1C;IACI,IAAIP,UAAU,CAACO,CAAC,CAAC,EAAE;MACrB,oBACEV,OAAA;QAAGW,SAAS,EAAC,MAAM;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAC,QAAA,EAC3CL,IAAI,GAAG;MAAG,GADuCC,CAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElD,CAAC;IAER,CAAC,MAAM;MACL,oBACElB,OAAA;QAAGW,SAAS,EAAC,MAAM;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAC,QAAA,EACzCL,IAAI,GAAG;MAAG,GADqCC,CAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhD,CAAC;IAER;EACF,CAAC,CAAC;EACF,oBACElB,OAAA;IAAKY,KAAK,EAAE;MACVO,eAAe,EAAC,OAAO;MACvBC,SAAS,EAAC,MAAM;MAChBC,SAAS,EAAC,MAAM;MAChBC,UAAU,EAAC,KAAK;MAChBC,WAAW,EAAC,KAAK;MACjBC,OAAO,EAAC,KAAK;MACbC,UAAU,EAAC,MAAM;MACjBC,YAAY,EAAC,KAAK;MAClBC,UAAU,EAAC,MAAM;MACjBC,MAAM,EAAC;IAAW,CAAE;IAAAd,QAAA,EACnBP;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAAAW,EAAA,GAnCK5B,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}