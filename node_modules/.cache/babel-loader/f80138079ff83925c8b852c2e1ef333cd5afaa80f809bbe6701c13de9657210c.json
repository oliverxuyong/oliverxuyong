{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/HighlightedSentence.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HighlightedSentence = ({\n  sentence,\n  matchedPos\n}) => {\n  _s();\n  const [level, setLevel] = useState(3);\n  const [previousLevel, setPreviousLevel] = useState(level);\n  const handleButtonPress = newLevel => {\n    setLevel(newLevel);\n  };\n  const handleFullButtonPress = () => {\n    setPreviousLevel(level);\n    setLevel(0);\n  };\n  const handleFullButtonRelease = () => {\n    setLevel(previousLevel);\n  };\n  const handleFullButtonDoubleClick = () => {\n    setLevel(0);\n  };\n  console.log;\n  const wordArray = sentence.split(\"||\")[level].split(' ');\n  //const nolcs_pos = findNonOverlappingLCS(sentence, text); //ordered as the same order of appearance in sentence.\n  //console.log('nolcs=', nolcs_pos);\n  const wordlist = wordArray.map((word, i) => {\n    //let returnvalue: JSX.Element;\n    if (matchedPos[i]) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"word\",\n        style: {\n          color: 'green'\n        },\n        children: word + ' '\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"word\",\n        children: word + ' '\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-controls\",\n      style: {\n        marginTop: '10px',\n        marginBottom: '5px',\n        //marginLeft:'20px', \n        //marginRight:'20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseDown: handleFullButtonPress\n        //onMouseLeave={handleFullButtonRelease}\n        ,\n        onMouseUp: handleFullButtonRelease,\n        onDoubleClick: handleFullButtonDoubleClick,\n        children: \"Full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), [1, 2, 3, 4, 5].map(lvl => /*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseDown: () => handleButtonPress(lvl),\n        children: [\"Level \", lvl]\n      }, lvl, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-sentence\",\n      style: {\n        backgroundColor: 'white',\n        height: '80px',\n        marginLeft: '4px',\n        marginRight: '4px',\n        padding: '5px',\n        borderRadius: '5px',\n        fontWeight: 'bold',\n        boxShadow: '1 2px 5px rgba(0,0,0,0.2)',\n        transition: '0.3s',\n        border: '1px solid'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: wordlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(HighlightedSentence, \"ww83/W23eYm6x2RfzKJgXiyEYL8=\");\n_c = HighlightedSentence;\nexport default HighlightedSentence;\nvar _c;\n$RefreshReg$(_c, \"HighlightedSentence\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HighlightedSentence","sentence","matchedPos","_s","level","setLevel","previousLevel","setPreviousLevel","handleButtonPress","newLevel","handleFullButtonPress","handleFullButtonRelease","handleFullButtonDoubleClick","console","log","wordArray","split","wordlist","map","word","i","className","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","marginBottom","display","justifyContent","alignItems","onMouseDown","onMouseUp","onDoubleClick","lvl","backgroundColor","height","marginLeft","marginRight","padding","borderRadius","fontWeight","boxShadow","transition","border","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/HighlightedSentence.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\n\nconst HighlightedSentence = ({ sentence, matchedPos }) => {\n  const [level, setLevel] = useState(3);\n  const [previousLevel, setPreviousLevel] = useState(level);\n\n  const handleButtonPress = (newLevel) => {\n    setLevel(newLevel);\n  };\n\n  const handleFullButtonPress = () => {\n      setPreviousLevel(level);\n      setLevel(0);\n  };\n\n  const handleFullButtonRelease = () => {\n    setLevel(previousLevel);\n  };\n\n  const handleFullButtonDoubleClick = () => {\n    setLevel(0);\n  };\n  console.log\n  const wordArray = sentence.split(\"||\")[level].split(' ');\n  //const nolcs_pos = findNonOverlappingLCS(sentence, text); //ordered as the same order of appearance in sentence.\n  //console.log('nolcs=', nolcs_pos);\n  const wordlist = wordArray.map((word, i) => {\n    //let returnvalue: JSX.Element;\n        if (matchedPos[i]) {\n      return (\n        <p className=\"word\" style={{ color: 'green' }} key={i}>\n          {word + ' '}\n        </p>\n      );\n    } else {\n      return (\n        <p className=\"word\" key={i}>\n          {word + ' '}\n        </p>\n      );\n    }\n  });\n\n  return (\n    <div>\n      <div className=\"level-controls\" \n      style={{ marginTop:'10px', \n        marginBottom:'5px',\n        //marginLeft:'20px', \n        //marginRight:'20px',\n        display: 'flex', \n        justifyContent:'center' , \n        alignItems: 'center' }}\n      >\n        <button\n          onMouseDown={handleFullButtonPress}\n          //onMouseLeave={handleFullButtonRelease}\n          onMouseUp={handleFullButtonRelease}\n          onDoubleClick={handleFullButtonDoubleClick}\n        >Full\n        </button>\n\n        {[1, 2, 3, 4, 5].map((lvl) => (\n          <button\n            key={lvl}\n            onMouseDown={() => handleButtonPress(lvl)}\n          >\n            Level {lvl}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"highlighted-sentence\" style={{\n            backgroundColor:'white', \n            height:'80px',\n            marginLeft:'4px',\n            marginRight:'4px',\n            padding:'5px', \n            borderRadius:'5px', \n            fontWeight:'bold',  \n            boxShadow:'1 2px 5px rgba(0,0,0,0.2)', \n            transition:'0.3s', \n            border:'1px solid'}}>\n        {/* Render the highlighted sentence here based on the matchedPos */}\n        <div>{wordlist}</div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default HighlightedSentence;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}