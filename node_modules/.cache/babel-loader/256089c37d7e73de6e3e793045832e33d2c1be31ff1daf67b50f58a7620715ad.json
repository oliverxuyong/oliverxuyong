{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/SpeechRecog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { replaceNumbersWithWords } from './MyLib.js';\n//import { fabClasses } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nif (!speechRecognition) {\n  alert('Speech Recognition API is not supported in this browser');\n  //return;\n}\nconst recognition = new speechRecognition();\nrecognition.continuous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n//recognition.lang = 'cmn-Hans-CN'; // 设置为普通话中文\n\n//好像没有这个方法 recognition.timeout = 30000;\n//recognition.maxAlternatives = 1; //xu\n\n/**\n 关于start()和stop()，playBackStatus和isListening的几个场景：\n 1. listening之后，出现的endevent要自动再次start()。\n    条件：listening=true，playBackStatus=false。\n 2. play开始后，如果出现endevent，不再start()，也不必做stop()。\n    条件：listening=true，playBackStatus=true。\n 3. play结束后，如果isListening=true，但却出现过endevent或errorevent，表明此时实际上已经stop，需要start()。\n 以上1和3可以合并。\n 4. 按start，先执行stop()，再start()。\n 5. 按stop，isListening=false实际上还在listening，这时会实际上执行一个start。（这个是effect里变量一直是初始值造成的？）\n */\n\n/*出现onend有三种情况：\n1. start后，说话后静默四五秒，或没说话静默二秒：\n  isListening=true，playBackStatus=false，这时应该执行recognition.start()。\n2. 主动按下stop后，并且执行了recognition.stop()，从而出现endevent：\n  isListening=false，playBackStatus=false，这时应该不执行recognition.start()。\n3. 在islistening=true，playBackStatus=true时，因为干扰，可能会出现endevent：\n  */\nconst SpeechRecog = ({\n  sendTextToParent,\n  playBackStatus\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [isStartPressed, setIsStartPressed] = useState(false);\n  const [isStopPressed, setIsStopPressed] = useState(false);\n  const [isEndEvent, setIsEndEvent] = useState(false);\n  const [isErrorEvent, setIsErrorEvent] = useState(false);\n  const [text, setText] = useState('The spoken text will appear here after you click the button above.');\n\n  //console.log('enter SpeechRecog()|', \"playBackStatus=\", playBackStatus, 'isListening=', isListening);\n  const toggleIsListening = () => {\n    console.log('toggleIsListening()...');\n    if (!isListening && !playBackStatus) {\n      setIsStartPressed(true);\n      setIsListening(true);\n    } else {\n      setIsStopPressed(true);\n      setIsListening(false);\n    }\n    //setIsListening((prevIsListening) => !prevIsListening);\n  };\n  useEffect(() => {\n    if (isListening && !playBackStatus && isStartPressed) {\n      console.log('isStartPressed，execute start():');\n      recognition.start();\n      setIsStartPressed(false);\n      //setIsEndEvent(false);\n    }\n    ;\n    if (!isListening) {\n      console.log('isStopPressed，execute stop():');\n      recognition.stop();\n    }\n  }, [isListening]);\n\n  /*\n    if (isListening && !playBackStatus && !isStartPressed && (isEndEvent || isErrorEvent)) {\n      console.log('execute start():');\n      recognition.start();\n      setIsStartPressed(false);\n      setIsEndEvent(false);\n      setIsErrorEvent(false);\n      //setIsEndEvent(false);\n    };\n  */\n  recognition.onend = () => {\n    //这里绑定了一个事件。如果它与isListening无关，它应该在另一个useEffect中定义。\n    console.log('onend event:');\n    setIsEndEvent(true);\n    //console.log(' isListening=', isListening, 'playBackStatus=', playBackStatus);\n    //recognition.start();\n  };\n  recognition.onerror = () => {\n    //\n\n    setIsErrorEvent(true);\n    console.log('error event:');\n    if (isListening && !playBackStatus) {\n      console.log(\" 符合isListening&&!playBackStatus条件,start()\");\n      //recognition.stop()\n      recognition.start();\n      //setIsEndEvent(false);\n    } else {\n      //console.log(\" 不符合isListening&&!playBackStatus条件,不执行start()\");\n    }\n  };\n  useEffect(() => {\n    recognition.onresult = event => {\n      //console.log(event.results.map((result) => result[0]).join(\"\"));\n      //console.log('RESULTS：', event.results);\n      //console.log('最新内容：', event.results[event.results.length - 1][0]);\n      let transcript = event.results[event.results.length - 1][0].transcript;\n      transcript = replaceNumbersWithWords(transcript);\n      setText(transcript);\n      sendTextToParent(transcript);\n    };\n    recognition.onnomatch = () => {\n      //\n      console.log('no-match event:');\n    };\n    recognition.onaudioend = () => {\n      //\n      console.log('audio-end event:');\n    };\n    recognition.onsoundend = () => {\n      //\n      console.log('sound-end event:');\n    };\n    recognition.onsoundstart = () => {\n      //\n      console.log('sound-start event:');\n    };\n    recognition.onspeechend = () => {\n      //\n      console.log('speech-end event:');\n    };\n    recognition.onspeechstart = () => {\n      //\n      console.log('speech-start event:');\n    };\n    recognition.onstart = () => {\n      //\n      console.log('start event:');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: 30,\n          backgroundColor: 'green',\n          color: 'white',\n          padding: '5px',\n          borderRadius: '5px',\n          fontWeight: 'bold',\n          boxShadow: '0 2px 5px rgba(0,0,0,0.2)',\n          transition: '0.3s',\n          border: '1px solid r'\n        },\n        color: \"primary\",\n        onClick: toggleIsListening,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-microphone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }, this), isListening ? ' STOP' : ' START']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechRecog, \"RkPDRIq22CUeoBuehPKvVUVnUm0=\");\n_c = SpeechRecog;\nexport default SpeechRecog;\nvar _c;\n$RefreshReg$(_c, \"SpeechRecog\");","map":{"version":3,"names":["React","useState","useEffect","replaceNumbersWithWords","jsxDEV","_jsxDEV","speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","alert","recognition","continuous","interimResults","lang","SpeechRecog","sendTextToParent","playBackStatus","_s","isListening","setIsListening","isStartPressed","setIsStartPressed","isStopPressed","setIsStopPressed","isEndEvent","setIsEndEvent","isErrorEvent","setIsErrorEvent","text","setText","toggleIsListening","console","log","start","stop","onend","onerror","onresult","event","transcript","results","length","onnomatch","onaudioend","onsoundend","onsoundstart","onspeechend","onspeechstart","onstart","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","height","backgroundColor","color","padding","borderRadius","fontWeight","boxShadow","transition","border","onClick","className","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/SpeechRecog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { replaceNumbersWithWords } from './MyLib.js';\n//import { fabClasses } from '@mui/material';\n\nconst speechRecognition =\n(window as unknown as Window & { SpeechRecognition: any }).SpeechRecognition || (window as unknown as Window & { webkitSpeechRecognition: any }).webkitSpeechRecognition;\nif (!speechRecognition) {\nalert('Speech Recognition API is not supported in this browser');\n//return;\n}\nconst recognition = new speechRecognition();\nrecognition.continuous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n//recognition.lang = 'cmn-Hans-CN'; // 设置为普通话中文\n\n//好像没有这个方法 recognition.timeout = 30000;\n//recognition.maxAlternatives = 1; //xu\n\n/**\n 关于start()和stop()，playBackStatus和isListening的几个场景：\n 1. listening之后，出现的endevent要自动再次start()。\n    条件：listening=true，playBackStatus=false。\n 2. play开始后，如果出现endevent，不再start()，也不必做stop()。\n    条件：listening=true，playBackStatus=true。\n 3. play结束后，如果isListening=true，但却出现过endevent或errorevent，表明此时实际上已经stop，需要start()。\n 以上1和3可以合并。\n 4. 按start，先执行stop()，再start()。\n 5. 按stop，isListening=false实际上还在listening，这时会实际上执行一个start。（这个是effect里变量一直是初始值造成的？）\n */\n\n    /*出现onend有三种情况：\n    1. start后，说话后静默四五秒，或没说话静默二秒：\n      isListening=true，playBackStatus=false，这时应该执行recognition.start()。\n    2. 主动按下stop后，并且执行了recognition.stop()，从而出现endevent：\n      isListening=false，playBackStatus=false，这时应该不执行recognition.start()。\n    3. 在islistening=true，playBackStatus=true时，因为干扰，可能会出现endevent：\n\n\n    */\nconst SpeechRecog = ({sendTextToParent,playBackStatus}) => {\n  const [isListening, setIsListening] = useState(false);\n  const [isStartPressed, setIsStartPressed] = useState(false);\n  const [isStopPressed, setIsStopPressed] = useState(false);\n  const [isEndEvent, setIsEndEvent] = useState(false);\n  const [isErrorEvent, setIsErrorEvent] = useState(false);\n  const [text, setText] = useState('The spoken text will appear here after you click the button above.');\n\n  //console.log('enter SpeechRecog()|', \"playBackStatus=\", playBackStatus, 'isListening=', isListening);\n  const toggleIsListening = () => {\n    console.log('toggleIsListening()...');\n    if (!isListening && !playBackStatus) {\n      setIsStartPressed(true);\n      setIsListening(true);\n    }else{\n      setIsStopPressed(true);\n      setIsListening(false);\n    }\n    //setIsListening((prevIsListening) => !prevIsListening);\n  }\n  \n\n\n  useEffect(() => {\n    if (isListening && !playBackStatus && isStartPressed) {\n      console.log('isStartPressed，execute start():');\n      recognition.start();\n      setIsStartPressed(false);\n      //setIsEndEvent(false);\n    };\n    if(!isListening){\n      console.log('isStopPressed，execute stop():');\n      recognition.stop();\n    }\n  },[isListening]);\n\n  /*\n    if (isListening && !playBackStatus && !isStartPressed && (isEndEvent || isErrorEvent)) {\n      console.log('execute start():');\n      recognition.start();\n      setIsStartPressed(false);\n      setIsEndEvent(false);\n      setIsErrorEvent(false);\n      //setIsEndEvent(false);\n    };\n  */\n  recognition.onend = () => { //这里绑定了一个事件。如果它与isListening无关，它应该在另一个useEffect中定义。\n    console.log('onend event:');\n    setIsEndEvent(true);\n    //console.log(' isListening=', isListening, 'playBackStatus=', playBackStatus);\n    //recognition.start();\n\n\n  };\n\n\n  recognition.onerror = () => { //\n\n\n    setIsErrorEvent(true);\n    console.log('error event:');\n    if (isListening && !playBackStatus) {\n      console.log(\" 符合isListening&&!playBackStatus条件,start()\");\n      //recognition.stop()\n      recognition.start();\n      //setIsEndEvent(false);\n    }else{\n      //console.log(\" 不符合isListening&&!playBackStatus条件,不执行start()\");\n    }\n\n\n\n\n  };\n\n\n\n  useEffect(() => {\n\n      recognition.onresult = (event) => {\n        //console.log(event.results.map((result) => result[0]).join(\"\"));\n        //console.log('RESULTS：', event.results);\n        //console.log('最新内容：', event.results[event.results.length - 1][0]);\n        let transcript = event.results[event.results.length - 1][0].transcript;\n        transcript = replaceNumbersWithWords(transcript);\n        setText(transcript);\n        sendTextToParent(transcript);\n      };\n\n\n      recognition.onnomatch = () => { //\n        console.log('no-match event:');\n      };\n      recognition.onaudioend = () => { //\n        console.log('audio-end event:');\n      };\n\n      recognition.onsoundend = () => { //\n        console.log('sound-end event:');\n      };\n      recognition.onsoundstart = () => { //\n        console.log('sound-start event:');\n      };\n      recognition.onspeechend = () => { //\n        console.log('speech-end event:');\n      };\n      recognition.onspeechstart = () => { //\n        console.log('speech-start event:');\n      };\n      recognition.onstart = () => { //\n        console.log('start event:');\n      };\n  }, []);\n  \n\n\n  return (\n    <div>\n    <br />\n    <div style={{display:'flex', justifyContent:'center'}}> \n      <button style={{height:30,\n        backgroundColor:'green', \n        color:'white',padding:'5px', \n        borderRadius:'5px', \n        fontWeight:'bold',  \n        boxShadow:'0 2px 5px rgba(0,0,0,0.2)', \n        transition:'0.3s', \n        border:'1px solid r'}} \n        color=\"primary\" \n        onClick={toggleIsListening}>\n      <i className=\"fas fa-microphone\"></i>\n      {isListening ? ' STOP' : ' START'}\n      </button>\n    </div>\n  </div>\n  );\n};\n\nexport default SpeechRecog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}