{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/WorkShop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import Button from '@mui/material/Button';\nimport HighlightedSentence from './HighlightedSentence.jsx'; // Add this import statement\nimport './style.css';\nimport SpeechToText from './SpeechToText.tsx'; // Adjust the import path as needed\nimport SpokenText from './SpokenText.jsx'; // Add this import statement\nimport AudioPlayer from './AudioPlayer.jsx';\nimport { findNonOverlappingLCS } from './MyLib.js';\n\n// Function to read a text file and return its content as a string\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchMaterial = async file => {\n  const response = await fetch(file);\n  const material = await response.text();\n  return material;\n};\nexport default function WorkShop({\n  material\n}) {\n  _s();\n  //const [sentences, setSentences] = useState('');\n  const [sentsArray, setSentsArray] = useState([]);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [spokenText, setSpokenText] = useState(\" The recognized text will appear here when you speak.\");\n\n  // Load and read the text file on component mount\n  useEffect(() => {\n    const loadText = async () => {\n      const filepath = '/' + material + '/' + material + '.txt';\n      const text = await fetchMaterial(filepath); // Ensure the file is correctly placed in the public directory\n      const sents = text.split(/\\r?\\n/).map(s => s.trim()).filter(s => s); // Split into sentences\n      //const sents = text.split(\"\\n\").map(s => s.trim()).filter(s => s);\n      //setSentences(text);\n      //console.log(filepath); \n      setSentsArray(sents);\n      setCurrentSentenceIndex(0);\n      //setSpokenText(\" know how wowo much money he makes because he didn't want us to have a joint checking account.\");\n    };\n    loadText();\n  }, [material]);\n\n  // Handlers for navigating between sentences\n  const handlePrevious = () => {\n    if (currentSentenceIndex > 0) {\n      setCurrentSentenceIndex(currentSentenceIndex - 1);\n    }\n  };\n  const handleNext = () => {\n    if (currentSentenceIndex < sentsArray.length - 1) {\n      setCurrentSentenceIndex(currentSentenceIndex + 1);\n    }\n  };\n  const receiveSpokenText = text => {\n    setSpokenText(text);\n    //console.log(\"app's text:\",text);\n  };\n  const sentence = sentsArray[currentSentenceIndex] || '';\n  const [sentPos, spokenTextPos] = findNonOverlappingLCS(sentence, spokenText); //ordered as the same order of appearance in sentence.\n  //console.log('spokenTextPos=', spokenTextPos);\n  let audiofile = '/' + material + '/' + material + '_' + (currentSentenceIndex + 1) + '.mp3';\n  //audiofile = \"/sample1/sample1_0.mp3\"\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: sentence.length === 0 ? \"\" : /*#__PURE__*/_jsxDEV(HighlightedSentence, {\n        sentence: sentence,\n        matchedPos: sentPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"PREV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n        audiofile: audiofile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SpeechToText, {\n        sendTextToParent: receiveSpokenText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SpokenText, {\n        spokenText: spokenText,\n        matchedPos: spokenTextPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkShop, \"hvHSRbc7EPqsBQ+0hTfRcKImOkA=\");\n_c = WorkShop;\nvar _c;\n$RefreshReg$(_c, \"WorkShop\");","map":{"version":3,"names":["React","useState","useEffect","HighlightedSentence","SpeechToText","SpokenText","AudioPlayer","findNonOverlappingLCS","jsxDEV","_jsxDEV","fetchMaterial","file","response","fetch","material","text","WorkShop","_s","sentsArray","setSentsArray","currentSentenceIndex","setCurrentSentenceIndex","spokenText","setSpokenText","loadText","filepath","sents","split","map","s","trim","filter","handlePrevious","handleNext","length","receiveSpokenText","sentence","sentPos","spokenTextPos","audiofile","children","matchedPos","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","display","justifyContent","alignItems","sendTextToParent","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/WorkShop.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n//import Button from '@mui/material/Button';\nimport HighlightedSentence from './HighlightedSentence.jsx'; // Add this import statement\nimport './style.css';\nimport SpeechToText from './SpeechToText.tsx'; // Adjust the import path as needed\nimport SpokenText from './SpokenText.jsx'; // Add this import statement\nimport AudioPlayer from './AudioPlayer.jsx';\nimport { findNonOverlappingLCS } from './MyLib.js';\n\n// Function to read a text file and return its content as a string\nconst fetchMaterial = async (file) => {\n  const response = await fetch(file);\n  const material = await response.text();\n  return material;\n};\n\nexport default function WorkShop({material}) {\n  //const [sentences, setSentences] = useState('');\n  const [sentsArray, setSentsArray] = useState([]);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [spokenText, setSpokenText] = useState(\" The recognized text will appear here when you speak.\");\n  \n  // Load and read the text file on component mount\n  useEffect(() => {\n    const loadText = async () => {\n      const filepath = '/'+ material + '/' + material + '.txt';\n      const text = await fetchMaterial(filepath); // Ensure the file is correctly placed in the public directory\n      const sents = text.split(/\\r?\\n/).map(s => s.trim()).filter(s => s); // Split into sentences\n      //const sents = text.split(\"\\n\").map(s => s.trim()).filter(s => s);\n      //setSentences(text);\n      //console.log(filepath); \n      setSentsArray(sents);\n      setCurrentSentenceIndex(0);\n      //setSpokenText(\" know how wowo much money he makes because he didn't want us to have a joint checking account.\");\n    };\n    loadText();\n  }, [material]);\n\n  // Handlers for navigating between sentences\n  const handlePrevious = () => {\n    if (currentSentenceIndex > 0) {\n      setCurrentSentenceIndex(currentSentenceIndex - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentSentenceIndex < sentsArray.length - 1) {\n      setCurrentSentenceIndex(currentSentenceIndex + 1);\n    }\n  };\n\n  const receiveSpokenText = (text) => {\n    setSpokenText(text);\n    //console.log(\"app's text:\",text);\n  };\n\n  const sentence = sentsArray[currentSentenceIndex] || '';\n  const [sentPos,spokenTextPos] = findNonOverlappingLCS(sentence, spokenText); //ordered as the same order of appearance in sentence.\n  //console.log('spokenTextPos=', spokenTextPos);\n  let audiofile = '/'+ material + '/' + material + '_' + (currentSentenceIndex+1) + '.mp3';\n//audiofile = \"/sample1/sample1_0.mp3\"\n\n  return (\n    <div>\n      <div>\n        {\n          sentence.length === 0 ? \"\" : <HighlightedSentence sentence={sentence} matchedPos={sentPos}/>}\n      </div>\n\n      <div style={{ marginTop:'10px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>  \n      <button>\n          PREV\n      </button>\n\n        \n        <button>\n          NEXT\n        </button>\n\n        <AudioPlayer audiofile={audiofile} /> \n\n\n      </div>\n\n\n\n      <div>\n        <SpeechToText sendTextToParent={receiveSpokenText}/>\n      </div>\n      <div>\n        <SpokenText spokenText={spokenText} matchedPos={spokenTextPos}/>\n      </div>\n\n      \n    \n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}