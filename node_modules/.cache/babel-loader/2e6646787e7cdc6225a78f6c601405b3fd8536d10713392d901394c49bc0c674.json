{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/WorkShop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import Button from '@mui/material/Button';\nimport HighlightedSentence from './HighlightedSentence.jsx'; // Add this import statement\n//import './App.css';\nimport SpeechRecog from './SpeechRecog.tsx'; // Adjust the import path as needed\nimport SpokenText from './SpokenText.jsx'; // Add this import statement\nimport AudioPlayer from './AudioPlayer.jsx';\nimport { findNonOverlappingLCS } from './MyLib.js';\n\n// Function to read a text file and return its content as a string\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchMaterial = async file => {\n  const response = await fetch(file);\n  const material = await response.text();\n  return material;\n};\nexport default function WorkShop({\n  material\n}) {\n  _s();\n  //const [sentences, setSentences] = useState('');\n  const [sentsArray, setSentsArray] = useState([]);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [spokenText, setSpokenText] = useState(\" The recognized text will appear here when you speak.\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [sentPos, setSentPos] = useState([]);\n  const [spokenTextPos, setSpokenTextPos] = useState([]);\n  const [audiofile, setAudiofile] = useState('');\n  const [sentence, setSentence] = useState(\"preset sentence || level 1||level 2||level 3||level 4||level 5\");\n  const [isListening, setIsListening] = useState(false);\n  //console.log(\"entered WorkShop.\");\n  // Load and read the text file on component mount\n  useEffect(() => {\n    //console.log(\"entered workshop's useEffect on material.\");\n    const loadText = async () => {\n      //console.log(\"entered workshop async loadtext...\");\n      const filepath = '/' + material + '/' + material + '.txt';\n      const text = await fetchMaterial(filepath); // Ensure the file is correctly placed in the public directory\n      //read a file and return its content as a string:\n      //const text = fetch(filepath).then(response => response.json());\n      //console.log(\"text=\",text);\n      //const text = fetchMaterial(filepath); // Ensure the file is correctly placed in the public directory\n      const sents = text.split(/\\r?\\n/).map(s => s.trim()).filter(s => s); // Split into sentences\n      //const sents = text.split(\"\\n\").map(s => s.trim()).filter(s => s);\n      //setSentences(text);\n      //console.log(filepath); \n      //console.log(\"Workshop useEffect on material, sents=\",sents);\n      setSentsArray(sents);\n      //console.log(\"Workshop useEffect on material, sentsArray=\",sentsArray)\n      setCurrentSentenceIndex(0);\n      //setSpokenText(\" know how wowo much money he makes because he didn't want us to have a joint checking account.\");\n    };\n    loadText();\n  }, [material]);\n\n  // Handlers for navigating between sentences\n  const handlePrevious = () => {\n    if (currentSentenceIndex > 0) {\n      setCurrentSentenceIndex(currentSentenceIndex - 1);\n    }\n  };\n  const handleNext = () => {\n    if (currentSentenceIndex < sentsArray.length - 1) {\n      setCurrentSentenceIndex(currentSentenceIndex + 1);\n    }\n  };\n  const receiveSpokenText = text => {\n    setSpokenText(text);\n    //console.log(\"workshop - received spoken text:\", text);\n    //console.log(\"app's text:\",text);\n  };\n  const receivePlaybackStatus = playBackStatus => {\n    //console.log(\"workshop received playback status:\", playBackStatus);\n    setIsPlaying(playBackStatus);\n  };\n  //console.log(\"Workshop root, sentsArray=\",sentsArray)\n\n  const toggleIsListening = () => {\n    console.log('toggleIsListening()...');\n    setIsListening(prevIsListening => !prevIsListening);\n  };\n  useEffect(() => {\n    //console.log('Workshop useEffect on currentSentenceIndex=', currentSentenceIndex);\n    //console.log('Workshop useEffect currentSentence: sentsArray=',sentsArray)\n    let currentSentence = sentsArray[currentSentenceIndex] || '';\n    //console.log(\"Workshop, currentSentence=\",currentSentence);\n    setSentence(currentSentence);\n    const [sentPos, spokenTextPos] = findNonOverlappingLCS(sentence.split(\"||\")[0], spokenText); //\n    setSentPos(sentPos);\n    setSpokenTextPos(spokenTextPos);\n    setAudiofile('/' + material + '/' + material + '_' + (currentSentenceIndex + 1) + '.mp3');\n  }, [currentSentenceIndex, sentsArray, spokenText]);\n\n  //console.log(\"workshop sentence=\",sentence)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: sentence.length === 0 ? \"\" : /*#__PURE__*/_jsxDEV(HighlightedSentence, {\n        sentence: sentence,\n        matchedPos: sentPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentSentenceIndex === 0,\n        style: {\n          padding: \"3px\",\n          marginLeft: '10px',\n          fontWeight: 'bold',\n          boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), \"PREV\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n        audiofile: audiofile,\n        sendPlaybackStatus: receivePlaybackStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentSentenceIndex === sentsArray.length - 1,\n        style: {\n          padding: '3px',\n          marginRight: '10px',\n          fontWeight: 'bold',\n          boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n        },\n        children: [\"NEXT\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SpeechRecog, {\n        sendTextToParent: receiveSpokenText,\n        playBackStatus: isPlaying,\n        isListening: isListening\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SpokenText, {\n        spokenText: spokenText,\n        matchedPos: spokenTextPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkShop, \"NSKyjGqsSEM62XbBcWSlmG7QWKM=\");\n_c = WorkShop;\nvar _c;\n$RefreshReg$(_c, \"WorkShop\");","map":{"version":3,"names":["React","useState","useEffect","HighlightedSentence","SpeechRecog","SpokenText","AudioPlayer","findNonOverlappingLCS","jsxDEV","_jsxDEV","fetchMaterial","file","response","fetch","material","text","WorkShop","_s","sentsArray","setSentsArray","currentSentenceIndex","setCurrentSentenceIndex","spokenText","setSpokenText","isPlaying","setIsPlaying","sentPos","setSentPos","spokenTextPos","setSpokenTextPos","audiofile","setAudiofile","sentence","setSentence","isListening","setIsListening","loadText","filepath","sents","split","map","s","trim","filter","handlePrevious","handleNext","length","receiveSpokenText","receivePlaybackStatus","playBackStatus","toggleIsListening","console","log","prevIsListening","currentSentence","children","matchedPos","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","display","justifyContent","alignItems","onClick","disabled","padding","marginLeft","fontWeight","boxShadow","className","sendPlaybackStatus","marginRight","sendTextToParent","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/WorkShop.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n//import Button from '@mui/material/Button';\nimport HighlightedSentence from './HighlightedSentence.jsx'; // Add this import statement\n//import './App.css';\nimport SpeechRecog from './SpeechRecog.tsx'; // Adjust the import path as needed\nimport SpokenText from './SpokenText.jsx'; // Add this import statement\nimport AudioPlayer from './AudioPlayer.jsx';\nimport { findNonOverlappingLCS } from './MyLib.js';\n\n// Function to read a text file and return its content as a string\nconst fetchMaterial = async (file) => {\n  const response = await fetch(file);\n  const material = await response.text();\n  return material;\n};\n\nexport default function WorkShop({material}) {\n  //const [sentences, setSentences] = useState('');\n  const [sentsArray, setSentsArray] = useState([]);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [spokenText, setSpokenText] = useState(\" The recognized text will appear here when you speak.\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [sentPos,setSentPos] = useState([]);\n  const [spokenTextPos,setSpokenTextPos] = useState([]);\n  const [audiofile, setAudiofile] = useState('');\n  const [sentence, setSentence] = useState(\"preset sentence || level 1||level 2||level 3||level 4||level 5\");\n  const [isListening, setIsListening] = useState(false);\n  //console.log(\"entered WorkShop.\");\n  // Load and read the text file on component mount\n  useEffect(() => {\n    //console.log(\"entered workshop's useEffect on material.\");\n    const loadText = async () => {\n      //console.log(\"entered workshop async loadtext...\");\n      const filepath = '/'+ material + '/' + material + '.txt';\n      const text = await fetchMaterial(filepath); // Ensure the file is correctly placed in the public directory\n      //read a file and return its content as a string:\n      //const text = fetch(filepath).then(response => response.json());\n      //console.log(\"text=\",text);\n      //const text = fetchMaterial(filepath); // Ensure the file is correctly placed in the public directory\n      const sents = text.split(/\\r?\\n/).map(s => s.trim()).filter(s => s); // Split into sentences\n      //const sents = text.split(\"\\n\").map(s => s.trim()).filter(s => s);\n      //setSentences(text);\n      //console.log(filepath); \n      //console.log(\"Workshop useEffect on material, sents=\",sents);\n      setSentsArray(sents);\n      //console.log(\"Workshop useEffect on material, sentsArray=\",sentsArray)\n      setCurrentSentenceIndex(0);\n      //setSpokenText(\" know how wowo much money he makes because he didn't want us to have a joint checking account.\");\n    };\n    loadText();\n  }, [material]);\n\n  // Handlers for navigating between sentences\n  const handlePrevious = () => {\n    if (currentSentenceIndex > 0) {\n      setCurrentSentenceIndex(currentSentenceIndex - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentSentenceIndex < sentsArray.length - 1) {\n      setCurrentSentenceIndex(currentSentenceIndex + 1);\n    }\n  };\n\n  const receiveSpokenText = (text) => {\n    setSpokenText(text);\n    //console.log(\"workshop - received spoken text:\", text);\n    //console.log(\"app's text:\",text);\n  };\n\n  const receivePlaybackStatus = (playBackStatus) => {\n    //console.log(\"workshop received playback status:\", playBackStatus);\n    setIsPlaying(playBackStatus);\n  };\n  //console.log(\"Workshop root, sentsArray=\",sentsArray)\n\n  const toggleIsListening = () => {\n    console.log('toggleIsListening()...');\n    setIsListening((prevIsListening) => !prevIsListening);\n  }\n\n  useEffect(() => {\n    //console.log('Workshop useEffect on currentSentenceIndex=', currentSentenceIndex);\n    //console.log('Workshop useEffect currentSentence: sentsArray=',sentsArray)\n    let currentSentence = sentsArray[currentSentenceIndex] || '';\n    //console.log(\"Workshop, currentSentence=\",currentSentence);\n    setSentence(currentSentence);\n    const [sentPos,spokenTextPos] = findNonOverlappingLCS(sentence.split(\"||\")[0], spokenText); //\n    setSentPos(sentPos);\n    setSpokenTextPos(spokenTextPos);\n    setAudiofile('/'+ material + '/' + material + '_' + (currentSentenceIndex+1) + '.mp3');\n    },[currentSentenceIndex, sentsArray,spokenText]);\n\n  //console.log(\"workshop sentence=\",sentence)\n\n  return (\n    <div>\n      <div>\n        {\n          sentence.length === 0 ? \"\" : <HighlightedSentence sentence={sentence} matchedPos={sentPos}/>}\n      </div>\n\n      <div style={{ marginTop:'10px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>  \n        <button \n            onClick={handlePrevious} \n            disabled={currentSentenceIndex === 0}\n            style={{ padding:\"3px\", marginLeft:'10px',fontWeight:'bold',  boxShadow:'0 2px 5px rgba(0,0,0,0.2)' }}\n        >\n          <i className=\"fas fa-chevron-left\"></i>PREV\n        </button>\n\n        <AudioPlayer audiofile={audiofile} sendPlaybackStatus={receivePlaybackStatus} /> \n          \n        <button \n          onClick={handleNext} \n          disabled={currentSentenceIndex === sentsArray.length - 1}\n          style={{ padding:'3px', marginRight: '10px',fontWeight:'bold',  boxShadow:'0 2px 5px rgba(0,0,0,0.2)'}}\n        >\n          NEXT<i className=\"fas fa-chevron-right\"></i>\n        </button>\n      </div>\n\n      <div>\n        <SpeechRecog sendTextToParent={receiveSpokenText} playBackStatus={isPlaying} isListening={isListening}/>\n      </div>\n      \n\n\n      <div>\n        <SpokenText spokenText={spokenText} matchedPos={spokenTextPos}/>\n      </div>\n    \n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}