{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/AudioPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\n\n// Define the AudioPlayer functional component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  audiofile,\n  sendPlaybackStatus\n}) => {\n  _s();\n  //console.log(\"entered AudioPlayer.\");\n  // Create a ref for the audio element\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  //console.log(\"testfun:\",testfun);\n  // Function to toggle play/pause\n  const togglePlayPause = rate => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        //sendPlaybackStatus(isPlaying);\n\n        audioRef.current.playbackRate = rate;\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const toggleSlowPlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        //sendPlaybackStatus(isPlaying);\n\n        audioRef.current.playbackRate = 0.7;\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n  useEffect(() => {\n    setIsPlaying(false);\n  }, [audiofile]);\n  useEffect(() => {\n    //console.log(\"entered AudioPlay useEffect on isPlaying.\",isPlaying);\n    sendPlaybackStatus(isPlaying);\n  }, [isPlaying]);\n\n  // Effect to handle the end of the audio playback\n  useEffect(() => {\n    const handleEnded = () => {\n      setIsPlaying(false);\n      //sendPlaybackStatus(false);\n    };\n    const audioElement = audioRef.current;\n    if (audioElement) {\n      audioElement.addEventListener('ended', handleEnded);\n    }\n\n    // Cleanup event listener on component unmount\n    return () => {\n      if (audioElement) {\n        audioElement.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayPause(1),\n      onDoubleClick: togglePlayPause(0.7),\n      style: {\n        backgroundColor: 'orange',\n        padding: '5px',\n        borderRadius: '5px',\n        fontWeight: 'bold',\n        boxShadow: '0 2px 5px rgba(0,0,0,0.2)',\n        transition: '0.3s',\n        border: '1px solid r'\n      },\n      children: isPlaying ? 'PAUSE' : 'PLAY'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audiofile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"TS1V2PsK5ADXScmh5JdjAJQ0ALI=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","AudioPlayer","audiofile","sendPlaybackStatus","_s","audioRef","isPlaying","setIsPlaying","togglePlayPause","rate","current","pause","playbackRate","play","toggleSlowPlayPause","handleEnded","audioElement","addEventListener","removeEventListener","style","display","justifyContent","children","onClick","onDoubleClick","backgroundColor","padding","borderRadius","fontWeight","boxShadow","transition","border","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/AudioPlayer.jsx"],"sourcesContent":["import React, { useRef, useState,useEffect } from 'react';\n\n// Define the AudioPlayer functional component\nconst AudioPlayer = ({audiofile,sendPlaybackStatus}) => {\n  //console.log(\"entered AudioPlayer.\");\n  // Create a ref for the audio element\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  //console.log(\"testfun:\",testfun);\n  // Function to toggle play/pause\n  const togglePlayPause = (rate) => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        //sendPlaybackStatus(isPlaying);\n\n        audioRef.current.playbackRate = rate;\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const toggleSlowPlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        //sendPlaybackStatus(isPlaying);\n\n        audioRef.current.playbackRate = 0.7;\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  }\n\n\n  useEffect(() => {\n    setIsPlaying(false);\n  },[audiofile]);\n\n  useEffect(() => {\n    //console.log(\"entered AudioPlay useEffect on isPlaying.\",isPlaying);\n    sendPlaybackStatus(isPlaying);\n  },[isPlaying]);\n\n  // Effect to handle the end of the audio playback\n  useEffect(() => {\n    const handleEnded = () => {\n      setIsPlaying(false);\n      //sendPlaybackStatus(false);\n    };\n\n    const audioElement = audioRef.current;\n    if (audioElement) {\n      audioElement.addEventListener('ended', handleEnded);\n    }\n\n    // Cleanup event listener on component unmount\n    return () => {\n      if (audioElement) {\n        audioElement.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, []);\n\n  return (\n    <div style={{display:'flex', justifyContent:'center'}}>\n      <button\n       onClick={togglePlayPause(1)} onDoubleClick={togglePlayPause(0.7)}\n       style={{backgroundColor:'orange', padding:'5px', borderRadius:'5px', fontWeight:'bold',  boxShadow:'0 2px 5px rgba(0,0,0,0.2)', transition:'0.3s', border:'1px solid r'}}\n       >\n        {isPlaying ? 'PAUSE' : 'PLAY'}\n      </button>\n      <audio ref={audioRef} src={audiofile} />\n    </div>\n  );\n};\n\n\nexport default AudioPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}