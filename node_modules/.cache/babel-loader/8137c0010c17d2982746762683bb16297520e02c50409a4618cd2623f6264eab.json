{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/HighlightedSentence.jsx\",\n  _s = $RefreshSig$();\n//import { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport './HighlightedSentence.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HighlightedSentence = ({\n  sentence,\n  matchedPos\n}) => {\n  _s();\n  const [level, setLevel] = useState(3);\n  const [previousLevel, setPreviousLevel] = useState(level);\n  const [showTranslation, setShowTranslation] = useState(true);\n  //const [wordArray_Full] = useState(sentence.split(\"||\")[0].split(' '));\n\n  const handleButtonPress = newLevel => {\n    setLevel(newLevel);\n  };\n  const handleFullButtonPress = e => {\n    //e.preventDefault();  \n    setPreviousLevel(level);\n    setLevel(0);\n  };\n  const handleFullButtonRelease = e => {\n    setLevel(previousLevel);\n    //e.preventDefault();  \n  };\n  const handleFullButtonDoubleClick = () => {\n    setLevel(0);\n  };\n  const handleShowTranslationButtonPress = () => {\n    setShowTranslation(!showTranslation);\n  };\n\n  //console.log(\"translation\",showTranslation);\n  const wordArray = sentence.split(\"||\")[level].split(' ');\n  const wordArray_Full = sentence.split(\"||\")[0].split(' ');\n  //const nolcs_pos = findNonOverlappingLCS(sentence, text); //ordered as the same order of appearance in sentence.\n  //console.log('nolcs=', nolcs_pos);\n  const wordlist = wordArray.map((word, i) => {\n    //let returnvalue: JSX.Element;\n    if (matchedPos[i]) {\n      wordArray[i] = wordArray_Full[i];\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"word\",\n        style: {\n          color: 'green'\n        },\n        children: wordArray_Full[i] + ' '\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"word\",\n        children: word + ' '\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-sentence\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"english-text-and-translation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"english-text\",\n          children: wordlist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"translation\",\n          children: showTranslation ? sentence.split(\"||\")[6] : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blanklevel-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"fulltext-button\",\n          onMouseDown: handleFullButtonPress,\n          onTouchStart: handleFullButtonPress,\n          onMouseUp: handleFullButtonRelease,\n          onTouchEnd: handleFullButtonRelease,\n          onDoubleClick: handleFullButtonDoubleClick,\n          children: \"Full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), [1, 2, 3, 4, 5].map(lvl => /*#__PURE__*/_jsxDEV(\"button\", {\n          onMouseDown: () => handleButtonPress(lvl),\n          ...(level === lvl ? {\n            style: {\n              backgroundColor: '#888'\n            }\n          } : {}),\n          children: [\"Lev \", lvl]\n        }, lvl, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onMouseDown: handleShowTranslationButtonPress,\n          style: {\n            marginLeft: '5px'\n          },\n          children: \"CHN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(HighlightedSentence, \"NnnJZuraSPjs3S9fjviE97y3NH0=\");\n_c = HighlightedSentence;\nexport default HighlightedSentence;\nvar _c;\n$RefreshReg$(_c, \"HighlightedSentence\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HighlightedSentence","sentence","matchedPos","_s","level","setLevel","previousLevel","setPreviousLevel","showTranslation","setShowTranslation","handleButtonPress","newLevel","handleFullButtonPress","e","handleFullButtonRelease","handleFullButtonDoubleClick","handleShowTranslationButtonPress","wordArray","split","wordArray_Full","wordlist","map","word","i","className","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDoubleClick","lvl","backgroundColor","marginLeft","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/HighlightedSentence.jsx"],"sourcesContent":["//import { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport './HighlightedSentence.css';\n\nconst HighlightedSentence = ({ sentence, matchedPos }) => {\n  const [level, setLevel] = useState(3);\n  const [previousLevel, setPreviousLevel] = useState(level);\n  const [showTranslation, setShowTranslation] = useState(true);\n  //const [wordArray_Full] = useState(sentence.split(\"||\")[0].split(' '));\n\n  const handleButtonPress = (newLevel) => {\n    setLevel(newLevel);\n  };\n\n  const handleFullButtonPress = (e) => {\n    //e.preventDefault();  \n    setPreviousLevel(level);\n    setLevel(0);\n  };\n\n  const handleFullButtonRelease = (e) => {\n    setLevel(previousLevel);\n    //e.preventDefault();  \n  };\n\n  const handleFullButtonDoubleClick = () => {\n    setLevel(0);\n  };\n\n  const handleShowTranslationButtonPress = () => {\n    setShowTranslation(!showTranslation);\n  }\n\n  //console.log(\"translation\",showTranslation);\n  const wordArray = sentence.split(\"||\")[level].split(' ');\n  const wordArray_Full = sentence.split(\"||\")[0].split(' ');\n  //const nolcs_pos = findNonOverlappingLCS(sentence, text); //ordered as the same order of appearance in sentence.\n  //console.log('nolcs=', nolcs_pos);\n  const wordlist = wordArray.map((word, i) => {\n    //let returnvalue: JSX.Element;\n    if (matchedPos[i]) {\n      wordArray[i] = wordArray_Full[i];\n      return (\n        <p className=\"word\" style={{ color: 'green' }} key={i}>\n          {wordArray_Full[i] + ' '}\n        </p>\n      );\n    } else {\n      return (\n        <p className=\"word\" key={i}>\n          {word + ' '}\n        </p>\n      );\n    }\n  });\n\n  return (\n    <div>\n      <div className=\"highlighted-sentence\">\n        <div className=\"english-text-and-translation\">\n          {/* Render the highlighted sentence here based on the matchedPos */}\n          <div className=\"english-text\">{wordlist}</div>\n          <div className=\"translation\" >\n            {showTranslation ? sentence.split(\"||\")[6] : ''}\n          </div>\n        </div>\n        <div className=\"blanklevel-controls\">\n          <button id='fulltext-button'\n            onMouseDown={handleFullButtonPress}\n            onTouchStart={handleFullButtonPress}\n            onMouseUp={handleFullButtonRelease}\n            onTouchEnd={handleFullButtonRelease}\n            onDoubleClick={handleFullButtonDoubleClick}\n            >Full\n          </button>\n          {[1, 2, 3, 4, 5].map((lvl) => (\n            <button \n              key={lvl} onMouseDown={() => handleButtonPress(lvl)}\n              {...(level === lvl ? { style: { backgroundColor:'#888' } } : {})}\n            >\n              Lev {lvl}\n            </button>\n          ))}\n          <button onMouseDown={handleShowTranslationButtonPress} style={{ marginLeft: '5px' }}>\n            CHN\n          </button>\n        </div>\n\n      </div>\n\n\n\n    </div>\n  );\n};\n\nexport default HighlightedSentence;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}