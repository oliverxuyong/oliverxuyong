{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/AudioPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\n\n// Define the AudioPlayer functional component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  audiofile\n}) => {\n  _s();\n  // Create a ref for the audio element\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Function to toggle play/pause\n  const togglePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  // Effect to handle the end of the audio playback\n  useEffect(() => {\n    const handleEnded = () => {\n      setIsPlaying(false);\n    };\n    const audioElement = audioRef.current;\n    if (audioElement) {\n      audioElement.addEventListener('ended', handleEnded);\n    }\n\n    // Cleanup event listener on component unmount\n    return () => {\n      if (audioElement) {\n        audioElement.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayPause,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audiofile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"PqCJVnA8ptXzv4jf6ihO4CXpWRw=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","AudioPlayer","audiofile","_s","audioRef","isPlaying","setIsPlaying","useState","togglePlayPause","current","pause","play","useEffect","handleEnded","audioElement","addEventListener","removeEventListener","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/AudioPlayer.jsx"],"sourcesContent":["import React, { useRef } from 'react';\n\n// Define the AudioPlayer functional component\nconst AudioPlayer = ({audiofile}) => {\n  // Create a ref for the audio element\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Function to toggle play/pause\n  const togglePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  // Effect to handle the end of the audio playback\n  useEffect(() => {\n    const handleEnded = () => {\n      setIsPlaying(false);\n    };\n\n    const audioElement = audioRef.current;\n    if (audioElement) {\n      audioElement.addEventListener('ended', handleEnded);\n    }\n\n    // Cleanup event listener on component unmount\n    return () => {\n      if (audioElement) {\n        audioElement.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <button onClick={togglePlayPause}>\n        {isPlaying ? 'Pause' : 'Play'}\n      </button>\n      <audio ref={audioRef} src={audiofile} />\n    </div>\n  );\n};\n\n\nexport default AudioPlayer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC;EACA,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIJ,QAAQ,CAACK,OAAO,EAAE;MACpB,IAAIJ,SAAS,EAAE;QACbD,QAAQ,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLN,QAAQ,CAACK,OAAO,CAACE,IAAI,CAAC,CAAC;MACzB;MACAL,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B;EACF,CAAC;;EAED;EACAO,SAAS,CAAC,MAAM;IACd,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxBP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAED,MAAMQ,YAAY,GAAGV,QAAQ,CAACK,OAAO;IACrC,IAAIK,YAAY,EAAE;MAChBA,YAAY,CAACC,gBAAgB,CAAC,OAAO,EAAEF,WAAW,CAAC;IACrD;;IAEA;IACA,OAAO,MAAM;MACX,IAAIC,YAAY,EAAE;QAChBA,YAAY,CAACE,mBAAmB,CAAC,OAAO,EAAEH,WAAW,CAAC;MACxD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAQkB,OAAO,EAAEV,eAAgB;MAAAS,QAAA,EAC9BZ,SAAS,GAAG,OAAO,GAAG;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACTtB,OAAA;MAAOuB,GAAG,EAAEnB,QAAS;MAACoB,GAAG,EAAEtB;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAACnB,EAAA,CA5CIF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}