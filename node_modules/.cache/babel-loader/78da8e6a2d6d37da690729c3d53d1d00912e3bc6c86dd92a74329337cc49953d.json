{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/SpeechToText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { replaceNumbersWithWords } from './MyLib.js';\n//import { fabClasses } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nif (!speechRecognition) {\n  alert('Speech Recognition API is not supported in this browser');\n  //return;\n}\nconst recognition = new speechRecognition();\nrecognition.continuous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n//recognition.lang = 'cmn-Hans-CN'; // 设置为普通话中文\n\n//好像没有这个方法 recognition.timeout = 30000;\n//recognition.maxAlternatives = 1; //xu\n\nconst SpeechToText = ({\n  sendTextToParent,\n  playBackStatus\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(true);\n  const [text, setText] = useState('The spoken text will appear here after you click the button above.');\n  console.log('enter SpeechToText()...', \"isListening=\", isListening);\n  //console.log('SpeechToText | playBackStatus=', playBackStatus);\n\n  const toggleIsListening = () => {\n    console.log('toggleIsListening()...');\n    setIsListening(prevIsListening => !prevIsListening);\n  };\n  useEffect(() => {\n    recognition.onresult = event => {\n      //console.log(event.results.map((result) => result[0]).join(\"\"));\n      //console.log('RESULTS：', event.results);\n      //console.log('最新内容：', event.results[event.results.length - 1][0]);\n      let transcript = event.results[event.results.length - 1][0].transcript;\n      transcript = replaceNumbersWithWords(transcript);\n      setText(transcript);\n      sendTextToParent(transcript);\n    };\n    recognition.onend = () => {\n      //这里绑定了一个事件。如果它与isListening无关，它应该在另一个useEffect中定义。\n      console.log('onend event: start():');\n      console.log(' isListening=', isListening, 'playBackStatus=', playBackStatus);\n      recognition.start();\n      if (isListening && !playBackStatus) {\n        console.log(\" 符合isListening&&!playBackStatus条件,start()\");\n        //recognition.start();\n      } else {\n        console.log(\" 不符合isListening&&!playBackStatus条件,不执行start()\");\n      }\n    };\n    recognition.onaudioend = () => {\n      //\n      console.log('audio-end event:');\n    };\n    recognition.onerror = () => {\n      //\n      console.log('error event:');\n    };\n    recognition.onnomatch = () => {\n      //\n      console.log('no-match event:');\n    };\n    recognition.onsoundend = () => {\n      //\n      console.log('sound-end event:');\n    };\n    recognition.onsoundstart = () => {\n      //\n      console.log('sound-start event:');\n    };\n    recognition.onspeechend = () => {\n      //\n      console.log('speech-end event:');\n    };\n    recognition.onspeechstart = () => {\n      //\n      console.log('speech-start event:');\n    };\n    recognition.onstart = () => {\n      //\n      console.log('start event:');\n    };\n  }, []);\n  let i = 0;\n  useEffect(() => {\n    //这个useEffect是为了让recognition.start()和recognition.stop()在isListening改变时执行。\n    i = i + 1;\n    console.log('into useEffect.i=', i);\n    if (isListening) {\n      console.log('execute recognition.start():');\n      recognition.start();\n    } else {\n      console.log('execute recognition.stop():');\n      recognition.stop();\n    }\n    ;\n    //return () => recognition.stop();\n  }, [isListening]);\n  useEffect(() => {\n    //这个useEffect是为了让recognition.start()和recognition.stop()在playBackStatus改变时执行。\n    //console.log('in SpeechToText useEffect - playbackstatus=', playBackStatus);\n    if (playBackStatus === true && isListening === true) {\n      console.log('playBackStatus is true, now stop listening: tmply not to...');\n      //recognition.stop();\n    }\n    if (playBackStatus === false && isListening === true) {\n      console.log('playBackStatus is false, now start listening: tmply not to...');\n      //recognition.start();\n    }\n  }, [playBackStatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: 30,\n          backgroundColor: 'green',\n          color: 'white',\n          padding: '5px',\n          borderRadius: '5px',\n          fontWeight: 'bold',\n          boxShadow: '0 2px 5px rgba(0,0,0,0.2)',\n          transition: '0.3s',\n          border: '1px solid r'\n        },\n        color: \"primary\"\n        //</div>onClick={() => setIsListening((prevIsListening) => !prevIsListening)}>\n        //</div>onClick={() => setIsListening(!isListening)}>\n        ,\n        onClick: toggleIsListening,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-microphone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), isListening ? ' STOP' : ' START']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"akHdnLQfJhFhIjonRW/yZd+VBsM=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","replaceNumbersWithWords","jsxDEV","_jsxDEV","speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","alert","recognition","continuous","interimResults","lang","SpeechToText","sendTextToParent","playBackStatus","_s","isListening","setIsListening","text","setText","console","log","toggleIsListening","prevIsListening","onresult","event","transcript","results","length","onend","start","onaudioend","onerror","onnomatch","onsoundend","onsoundstart","onspeechend","onspeechstart","onstart","i","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","height","backgroundColor","color","padding","borderRadius","fontWeight","boxShadow","transition","border","onClick","className","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/SpeechToText.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { replaceNumbersWithWords } from './MyLib.js';\n//import { fabClasses } from '@mui/material';\n\n\nconst speechRecognition =\n  (window as unknown as Window & { SpeechRecognition: any }).SpeechRecognition || (window as unknown as Window & { webkitSpeechRecognition: any }).webkitSpeechRecognition;\nif (!speechRecognition) {\n  alert('Speech Recognition API is not supported in this browser');\n  //return;\n}\n\nconst recognition = new speechRecognition();\nrecognition.continuous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n//recognition.lang = 'cmn-Hans-CN'; // 设置为普通话中文\n\n//好像没有这个方法 recognition.timeout = 30000;\n//recognition.maxAlternatives = 1; //xu\n\nconst SpeechToText = ({sendTextToParent,playBackStatus}) => {\n  const [isListening, setIsListening] = useState(true);\n  const [text, setText] = useState('The spoken text will appear here after you click the button above.');\n  console.log('enter SpeechToText()...', \"isListening=\", isListening);\n  //console.log('SpeechToText | playBackStatus=', playBackStatus);\n\n  const toggleIsListening = () => {\n    console.log('toggleIsListening()...');\n    setIsListening((prevIsListening) => !prevIsListening);\n  }\n\nuseEffect(() => {\n\n  recognition.onresult = (event) => {\n    //console.log(event.results.map((result) => result[0]).join(\"\"));\n    //console.log('RESULTS：', event.results);\n    //console.log('最新内容：', event.results[event.results.length - 1][0]);\n    let transcript = event.results[event.results.length - 1][0].transcript;\n    transcript = replaceNumbersWithWords(transcript);\n    setText(transcript);\n    sendTextToParent(transcript);\n  };\n\n  recognition.onend = () => { //这里绑定了一个事件。如果它与isListening无关，它应该在另一个useEffect中定义。\n    console.log('onend event: start():');\n    console.log(' isListening=', isListening, 'playBackStatus=', playBackStatus);\n    recognition.start();\n    if (isListening && !playBackStatus) {\n      console.log(\" 符合isListening&&!playBackStatus条件,start()\");\n      //recognition.start();\n    }else{\n      console.log(\" 不符合isListening&&!playBackStatus条件,不执行start()\");\n    }\n  };\n\n  recognition.onaudioend = () => { //\n    console.log('audio-end event:');\n  };\n  recognition.onerror = () => { //\n    console.log('error event:');\n  };\n  recognition.onnomatch = () => { //\n    console.log('no-match event:');\n  };\n\n  recognition.onsoundend = () => { //\n    console.log('sound-end event:');\n  };\n  recognition.onsoundstart = () => { //\n    console.log('sound-start event:');\n  };\n  recognition.onspeechend = () => { //\n    console.log('speech-end event:');\n  };\n  recognition.onspeechstart = () => { //\n    console.log('speech-start event:');\n  };\n  recognition.onstart = () => { //\n    console.log('start event:');\n  };\n}, []);\n\n  let i = 0;\n  useEffect(() => { //这个useEffect是为了让recognition.start()和recognition.stop()在isListening改变时执行。\n    i = i + 1;\n    console.log('into useEffect.i=', i);\n    if (isListening) {\n      console.log('execute recognition.start():');\n      recognition.start();\n    }else{\n      console.log('execute recognition.stop():');\n      recognition.stop()\n    };\n    //return () => recognition.stop();\n  }, [isListening]);\n\n  useEffect(() => { //这个useEffect是为了让recognition.start()和recognition.stop()在playBackStatus改变时执行。\n    //console.log('in SpeechToText useEffect - playbackstatus=', playBackStatus);\n    if (playBackStatus === true && isListening === true) {\n      console.log('playBackStatus is true, now stop listening: tmply not to...');\n      //recognition.stop();\n    }\n    if (playBackStatus === false && isListening === true) {\n      console.log('playBackStatus is false, now start listening: tmply not to...');\n      //recognition.start();\n    }\n  },[playBackStatus]);\n\n  return (\n    <div>\n      <br />\n      <div style={{display:'flex', justifyContent:'center'}}> \n        \n        <button style={{height:30,\n          backgroundColor:'green', \n          color:'white',padding:'5px', \n          borderRadius:'5px', \n          fontWeight:'bold',  \n          boxShadow:'0 2px 5px rgba(0,0,0,0.2)', \n          transition:'0.3s', \n          border:'1px solid r'}} \n          color=\"primary\" \n          //</div>onClick={() => setIsListening((prevIsListening) => !prevIsListening)}>\n          //</div>onClick={() => setIsListening(!isListening)}>\n          onClick={toggleIsListening}>\n        <i className=\"fas fa-microphone\"></i>\n        {isListening ? ' STOP' : ' START'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}