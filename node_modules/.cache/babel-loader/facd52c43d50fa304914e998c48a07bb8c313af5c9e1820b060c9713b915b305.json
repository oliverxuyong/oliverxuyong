{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/WorkShop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport HighlightedSentence from './HighlightedSentence.jsx'; // Add this import statement\nimport './style.css';\nimport SpeechToText from './SpeechToText.tsx'; // Adjust the import path as needed\nimport SpokenText from './SpokenText.jsx'; // Add this import statement\nimport AudioPlayer from './AudioPlayer.jsx';\nimport { findNonOverlappingLCS } from './MyLib.js';\n\n// Function to read a text file and return its content as a string\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchMaterial = async file => {\n  const response = await fetch(file);\n  const material = await response.text();\n  return material;\n};\nexport default function App() {\n  _s();\n  //const [sentences, setSentences] = useState('');\n  const [sentsArray, setSentsArray] = useState([]);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [spokenText, setSpokenText] = useState(\" The recognized text will appear here when you speak.\");\n\n  // Load and read the text file on component mount\n  useEffect(() => {\n    const loadText = async () => {\n      const text = await fetchMaterial('/sample1.txt'); // Ensure the file is correctly placed in the public directory\n      const sents = text.split('.').map(s => s.trim()).filter(s => s); // Split into sentences\n      //setSentences(text);\n      setSentsArray(sents);\n      setCurrentSentenceIndex(0);\n      //setSpokenText(\" know how wowo much money he makes because he didn't want us to have a joint checking account.\");\n    };\n    loadText();\n  }, []);\n\n  // Handlers for navigating between sentences\n  const handlePrevious = () => {\n    if (currentSentenceIndex > 0) {\n      setCurrentSentenceIndex(currentSentenceIndex - 1);\n    }\n  };\n  const handleNext = () => {\n    if (currentSentenceIndex < sentsArray.length - 1) {\n      setCurrentSentenceIndex(currentSentenceIndex + 1);\n    }\n  };\n  const receiveSpokenText = text => {\n    setSpokenText(text);\n    console.log(\"app's text:\", text);\n  };\n  const sentence = sentsArray[currentSentenceIndex] || '';\n  const [sentPos, spokenTextPos] = findNonOverlappingLCS(sentence, spokenText); //ordered as the same order of appearance in sentence.\n  console.log('spokenTextPos=', spokenTextPos);\n  let audiofile = '/english_tts_audio.mp3';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Hello English Geeks!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HighlightedSentence, {\n        sentence: sentence,\n        matchedPos: sentPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handlePrevious,\n        disabled: currentSentenceIndex === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n        audiofile: \"english_tts_audio.mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleNext,\n        disabled: currentSentenceIndex === sentsArray.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SpeechToText, {\n        sendTextToParent: receiveSpokenText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SpokenText, {\n        spokenText: spokenText,\n        matchedPos: spokenTextPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hvHSRbc7EPqsBQ+0hTfRcKImOkA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","HighlightedSentence","SpeechToText","SpokenText","AudioPlayer","findNonOverlappingLCS","jsxDEV","_jsxDEV","fetchMaterial","file","response","fetch","material","text","App","_s","sentsArray","setSentsArray","currentSentenceIndex","setCurrentSentenceIndex","spokenText","setSpokenText","loadText","sents","split","map","s","trim","filter","handlePrevious","handleNext","length","receiveSpokenText","console","log","sentence","sentPos","spokenTextPos","audiofile","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","matchedPos","variant","onClick","disabled","sendTextToParent","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/WorkShop.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport HighlightedSentence from './HighlightedSentence.jsx'; // Add this import statement\nimport './style.css';\nimport SpeechToText from './SpeechToText.tsx'; // Adjust the import path as needed\nimport SpokenText from './SpokenText.jsx'; // Add this import statement\nimport AudioPlayer from './AudioPlayer.jsx';\nimport { findNonOverlappingLCS } from './MyLib.js';\n\n// Function to read a text file and return its content as a string\nconst fetchMaterial = async (file) => {\n  const response = await fetch(file);\n  const material = await response.text();\n  return material;\n};\n\nexport default function App() {\n  //const [sentences, setSentences] = useState('');\n  const [sentsArray, setSentsArray] = useState([]);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState(0);\n  const [spokenText, setSpokenText] = useState(\" The recognized text will appear here when you speak.\");\n  \n  // Load and read the text file on component mount\n  useEffect(() => {\n    const loadText = async () => {\n      const text = await fetchMaterial('/sample1.txt'); // Ensure the file is correctly placed in the public directory\n      const sents = text.split('.').map(s => s.trim()).filter(s => s); // Split into sentences\n      //setSentences(text);\n      setSentsArray(sents);\n      setCurrentSentenceIndex(0);\n      //setSpokenText(\" know how wowo much money he makes because he didn't want us to have a joint checking account.\");\n    };\n    loadText();\n  }, []);\n\n  // Handlers for navigating between sentences\n  const handlePrevious = () => {\n    if (currentSentenceIndex > 0) {\n      setCurrentSentenceIndex(currentSentenceIndex - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentSentenceIndex < sentsArray.length - 1) {\n      setCurrentSentenceIndex(currentSentenceIndex + 1);\n    }\n  };\n\n  const receiveSpokenText = (text) => {\n    setSpokenText(text);\n    console.log(\"app's text:\",text);\n  };\n\n  const sentence = sentsArray[currentSentenceIndex] || '';\n  const [sentPos,spokenTextPos] = findNonOverlappingLCS(sentence, spokenText); //ordered as the same order of appearance in sentence.\n  console.log('spokenTextPos=', spokenTextPos);\n  let audiofile = '/english_tts_audio.mp3';\n\n  return (\n    <div>\n      <h1 style={{ textAlign:'center' }}>Hello English Geeks!</h1>\n      <div>\n        <HighlightedSentence sentence={sentence} matchedPos={sentPos} />\n      </div>\n      <div>  \n        <Button \n          variant=\"contained\" \n          onClick={handlePrevious} \n          disabled={currentSentenceIndex === 0}\n        >\n          Previous\n        </Button>\n\n        <AudioPlayer audiofile=\"english_tts_audio.mp3\"/> \n\n        <Button \n          variant=\"contained\" \n          onClick={handleNext} \n          disabled={currentSentenceIndex === sentsArray.length - 1}\n        >\n          Next\n        </Button>\n\n      </div>\n      <div>\n        <SpeechToText sendTextToParent={receiveSpokenText}/>\n      </div>\n      <div>\n        <SpokenText spokenText={spokenText} matchedPos={spokenTextPos}/>\n      </div>\n      \n    \n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}