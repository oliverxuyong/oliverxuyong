{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/SpeechToText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { replaceNumbersWithWords } from './MyLib.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nif (!speechRecognition) {\n  alert('Speech Recognition API is not supported in this browser');\n  //return;\n}\nconst recognition = new speechRecognition();\nrecognition.continuous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n//recognition.lang = 'cmn-Hans-CN'; // 设置为普通话中文\n\n//好像没有这个方法 recognition.timeout = 30000;\n//recognition.maxAlternatives = 1; //xu\n\nconst SpeechToText = ({\n  sendTextToParent\n}, {\n  playbackstatus\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [text, setText] = useState('The spoken text will appear here after you click the button above.');\n  //console.log('enter SpeechToText()...');\n\n  recognition.onresult = event => {\n    //console.log(event.results.map((result) => result[0]).join(\"\"));\n    //console.log('RESULTS：', event.results);\n    //console.log('最新内容：', event.results[event.results.length - 1][0]);\n    let transcript = event.results[event.results.length - 1][0].transcript;\n    transcript = replaceNumbersWithWords(transcript);\n    setText(transcript);\n    sendTextToParent(transcript);\n  };\n  let i = 0;\n  useEffect(() => {\n    i = i + 1;\n    //console.log('into useEffect.i=', i);\n    recognition.onend = e => {\n      if (isListening) recognition.start();\n    };\n    isListening ? recognition.start() : recognition.stop();\n    return () => recognition.stop();\n  }, [isListening]);\n  useEffect(() => {\n    console.log('in SpeechToText - playbackstatus=', playbackstatus);\n    if (playbackstatus === true) {\n      recognition.stop();\n    } else {\n      if (!isListening) {\n        recognition.start();\n      }\n    }\n  }, [playbackstatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: 30,\n          backgroundColor: 'green',\n          color: 'white',\n          padding: '5px',\n          borderRadius: '5px',\n          fontWeight: 'bold',\n          boxShadow: '0 2px 5px rgba(0,0,0,0.2)',\n          transition: '0.3s',\n          border: '1px solid r'\n        },\n        color: \"primary\",\n        onClick: () => setIsListening(prevIsListening => !prevIsListening),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-microphone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), isListening ? ' STOP' : ' START']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"faYOhU8SPnLUI9vnMXsRnoFnSrI=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","replaceNumbersWithWords","jsxDEV","_jsxDEV","speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","alert","recognition","continuous","interimResults","lang","SpeechToText","sendTextToParent","playbackstatus","_s","isListening","setIsListening","text","setText","onresult","event","transcript","results","length","i","onend","e","start","stop","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","height","backgroundColor","color","padding","borderRadius","fontWeight","boxShadow","transition","border","onClick","prevIsListening","className","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/SpeechToText.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { replaceNumbersWithWords } from './MyLib.js';\n\n\nconst speechRecognition =\n  (window as unknown as Window & { SpeechRecognition: any }).SpeechRecognition || (window as unknown as Window & { webkitSpeechRecognition: any }).webkitSpeechRecognition;\nif (!speechRecognition) {\n  alert('Speech Recognition API is not supported in this browser');\n  //return;\n}\n\nconst recognition = new speechRecognition();\nrecognition.continuous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n//recognition.lang = 'cmn-Hans-CN'; // 设置为普通话中文\n\n//好像没有这个方法 recognition.timeout = 30000;\n//recognition.maxAlternatives = 1; //xu\n\nconst SpeechToText = ({sendTextToParent},{playbackstatus}) => {\n  const [isListening, setIsListening] = useState(false);\n  const [text, setText] = useState('The spoken text will appear here after you click the button above.');\n  //console.log('enter SpeechToText()...');\n\n  recognition.onresult = (event) => {\n    //console.log(event.results.map((result) => result[0]).join(\"\"));\n    //console.log('RESULTS：', event.results);\n    //console.log('最新内容：', event.results[event.results.length - 1][0]);\n    let transcript = event.results[event.results.length - 1][0].transcript;\n    transcript = replaceNumbersWithWords(transcript);\n    setText(transcript);\n    sendTextToParent(transcript);\n  };\n\n  let i = 0;\n  useEffect(() => {\n    i = i + 1;\n    //console.log('into useEffect.i=', i);\n    recognition.onend = (e) => {\n      if (isListening) recognition.start();\n    };\n\n    isListening ? recognition.start() : recognition.stop();\n\n    return () => recognition.stop();\n  }, [isListening]);\n\n  useEffect(() => {\n    console.log('in SpeechToText - playbackstatus=', playbackstatus);\n    if (playbackstatus === true) {\n      recognition.stop();\n    }else{\n      if (!isListening){\n        recognition.start();\n      }\n    }\n  },[playbackstatus]);\n\n  return (\n    <div>\n      <br />\n      <div style={{display:'flex', justifyContent:'center'}}> \n        \n        <button style={{height:30,backgroundColor:'green', color:'white',padding:'5px', borderRadius:'5px', fontWeight:'bold',  boxShadow:'0 2px 5px rgba(0,0,0,0.2)', transition:'0.3s', border:'1px solid r'}} color=\"primary\" onClick={() => setIsListening((prevIsListening) => !prevIsListening)}>\n        <i className=\"fas fa-microphone\"></i>\n        {isListening ? ' STOP' : ' START'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}