{"ast":null,"code":"var _jsxFileName = \"/Users/oxu/react-vycxvv-proenglish/src/SpeechToText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { replaceNumbersWithWords } from './MyLib.js';\nimport Button from '@mui/material/Button';\n\n//import HighlightedSentence from './HighlightedSentence.jsx'; // Add this import statement\n\n//import Audio from '@mui/material/Audio'; // Add this import statement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nif (!speechRecognition) {\n  alert('Speech Recognition API is not supported in this browser');\n  //return;\n}\nconst recognition = new speechRecognition();\nrecognition.continuous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n//recognition.lang = 'cmn-Hans-CN'; // 设置为普通话中文\n\n//好像没有这个方法 recognition.timeout = 30000;\n//recognition.maxAlternatives = 1; //xu\n\nconst SpeechToText = ({\n  sendTextToParent\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [text, setText] = useState('The spoken text will appear here after you click the button above.');\n  //console.log('enter SpeechToText()...');\n\n  recognition.onresult = event => {\n    //console.log(event.results.map((result) => result[0]).join(\"\"));\n    //console.log('RESULTS：', event.results);\n    console.log('最新内容：', event.results[event.results.length - 1][0]);\n    let transcript = event.results[event.results.length - 1][0].transcript;\n    transcript = replaceNumbersWithWords(transcript);\n    setText(transcript);\n    sendTextToParent(transcript);\n  };\n  let i = 0;\n  useEffect(() => {\n    i = i + 1;\n    console.log('into useEffect.i=', i);\n    recognition.onend = e => {\n      if (isListening) recognition.start();\n    };\n    isListening ? recognition.start() : recognition.stop();\n    return () => recognition.stop();\n  }, [isListening]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          height: 34,\n          width: 180\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setIsListening(prevIsListening => !prevIsListening),\n        children: isListening ? 'Stop Listening' : 'Start Listening'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"zJijnq7czXKzYMmWM/2zoiPEDXY=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","replaceNumbersWithWords","Button","jsxDEV","_jsxDEV","speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","alert","recognition","continuous","interimResults","lang","SpeechToText","sendTextToParent","_s","isListening","setIsListening","text","setText","onresult","event","console","log","results","length","transcript","i","onend","e","start","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","height","width","variant","color","onClick","prevIsListening","_c","$RefreshReg$"],"sources":["/Users/oxu/react-vycxvv-proenglish/src/SpeechToText.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { replaceNumbersWithWords } from './MyLib.js';\nimport Button from '@mui/material/Button';\n\n//import HighlightedSentence from './HighlightedSentence.jsx'; // Add this import statement\n\n//import Audio from '@mui/material/Audio'; // Add this import statement\n\nconst speechRecognition =\n  (window as unknown as Window & { SpeechRecognition: any }).SpeechRecognition || (window as unknown as Window & { webkitSpeechRecognition: any }).webkitSpeechRecognition;\nif (!speechRecognition) {\n  alert('Speech Recognition API is not supported in this browser');\n  //return;\n}\n\nconst recognition = new speechRecognition();\nrecognition.continuous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n//recognition.lang = 'cmn-Hans-CN'; // 设置为普通话中文\n\n//好像没有这个方法 recognition.timeout = 30000;\n//recognition.maxAlternatives = 1; //xu\n\nconst SpeechToText = ({sendTextToParent}) => {\n  const [isListening, setIsListening] = useState(false);\n  const [text, setText] = useState('The spoken text will appear here after you click the button above.');\n  //console.log('enter SpeechToText()...');\n\n  recognition.onresult = (event) => {\n    //console.log(event.results.map((result) => result[0]).join(\"\"));\n    //console.log('RESULTS：', event.results);\n    console.log('最新内容：', event.results[event.results.length - 1][0]);\n    let transcript = event.results[event.results.length - 1][0].transcript;\n    transcript = replaceNumbersWithWords(transcript);\n    setText(transcript);\n    sendTextToParent(transcript);\n  };\n\n  let i = 0;\n  useEffect(() => {\n    i = i + 1;\n    console.log('into useEffect.i=', i);\n    recognition.onend = (e) => {\n      if (isListening) recognition.start();\n    };\n\n    isListening ? recognition.start() : recognition.stop();\n\n    return () => recognition.stop();\n  }, [isListening]);\n\n  return (\n    <div>\n      <br />\n      <div style={{display:'flex', justifyContent:'center'}}> \n        <Button style={{height:34,width:180}} variant=\"contained\" color=\"primary\" onClick={() => setIsListening((prevIsListening) => !prevIsListening)}>\n        {isListening ? 'Stop Listening' : 'Start Listening'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}